# t "let x = succ 0 in x" ;;
[INF: anfang]   Imported expression: let x = (succ) (0) in x
[DBG: anfang]   Easy env: {*: int -> int -> int, +: int -> int -> int, -: int -> int -> int, /: int -> int -> int, abs: int -> int, asr: int -> int -> int, compare: 'h -> 'h -> int, exit: int -> 'i, land: int -> int -> int, lnot: int -> int, lor: int -> int -> int, lsl: int -> int -> int, lsr: int -> int -> int, lxor: int -> int -> int, max: 'm -> 'm -> 'm, max_int: int, min: 'l -> 'l -> 'l, min_int: int, mod: int -> int -> int, pred: int -> int, succ: int -> int, ~-: int -> int, }

[DBG: generate] succ => <{}, 'o, {'o = int -> int; }>
[DBG: generate] 0 => <{}, 'p, {int = 'p; }>


= LEXP1 =
[DBG: generate] (succ) (0) => <{}, 'q, {'o = int -> int; int = 'p; 'q = 's; 'p = 'r; 'o = 'r -> 's; }>
  {
    'o = ('r = 'p = int) -> ('s = 'q = int)
 }>


= LEXP2 =
[DBG: generate] x => <{x: I{'u; }; }, 't, {'u = 't; }>


= let x = LEXP1 in LEXP2 =

'q --- 'o = ('r = 'p = int) -> ('s = 'q = int)
[DBG: generate] substituting by 's: 'v; 'r: 'w; 'q: 'x; 'p: 'y; 'o: 'a1; 
'x --- 'a1 = ('w = 'y = int) -> ('v = 'x = int)

[DBG: generate] let x = (succ) (0) in x => <{}, 'b1, 
 { 'a1 = int -> int; 'u = 't; int = 'y; 'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }
  {
    'a1 = (int = 'r) -> (int = 's)
    'x = 'v = 'b1 = 'u = 't
    int = 'y = 'w
  }

[DBG: solve]    unify_full {'a1 = int -> int; 'u = 't; int = 'y; 'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {}; {}; ([0,0+-1]..[0,0+-1]) ghost
[DBG: solve]    unify_full {'u = 't; int = 'y; 'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {}; {'a1 = int -> int; }; ([0,0+-1]..[0,0+-1]) ghost
[DBG: solve]      Unifying var, ty: 'a1, int -> int
[DBG: solve]    unify_full {'u = 't; int = 'y; 'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {'a1: int -> int, }; {}; ([0,0+-1]..[0,0+-1]) ghost
[DBG: solve]    unify_full {int = 'y; 'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {'a1: int -> int, }; {'u = 't; }; (18..19)
[DBG: solve]      Unifying var, ty: 'u, 't
[DBG: solve]    unify_full {int = 'y; 'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'u: 't, }; {}; (18..19)
[DBG: solve]    unify_full {'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'u: 't, }; {int = 'y; }; (13..14)
[DBG: solve]      Unifying int with var 'y
[DBG: solve]    unify_full {'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'u: 't, }; {'y = int; }; (13..14)
[DBG: solve]      Unifying var, ty: 'y, int
[DBG: solve]    unify_full {'a1 = 'r -> 's; 'y = 'w; 'x = 'v; 'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'u: 't, }; {}; (13..14)
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'u: 't, }; {'x = 'v; 'y = 'w; 'a1 = 'r -> 's; }; (8..14)
[DBG: solve]      Unifying var, ty: 'x, 'v
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, }; {'y = 'w; 'a1 = 'r -> 's; }; (8..14)
[DBG: solve]      Unifying var, ty: 'y, 'w
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, }; {'a1 = 'r -> 's; int = 'w; }; (8..14)
[DBG: solve]      Unifying var, ty: 'a1, 'r -> 's
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, }; {int -> int = 'r -> 's; int = 'w; }; (8..14)
[DBG: solve]      Unifying 2 arrows: int -> int, 'r -> 's
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, }; {int = 'r; int = 's; int = 'w; }; (8..14)
[DBG: solve]      Unifying int with var 'r
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, }; {int = 's; 'r = int; int = 'w; }; (8..14)
[DBG: solve]      Unifying int with var 's
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, }; {'r = int; 's = int; int = 'w; }; (8..14)
[DBG: solve]      Unifying var, ty: 'r, int
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, 'r: int, }; {'s = int; int = 'w; }; (8..14)
[DBG: solve]      Unifying var, ty: 's, int
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, 's: int, 'r: int, }; {int = 'w; }; (8..14)
[DBG: solve]      Unifying int with var 'w
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'u: 't, 's: int, 'r: int, }; {'w = int; }; (8..14)
[DBG: solve]      Unifying var, ty: 'w, int
[DBG: solve]    unify_full {'b1 = 't; 'x = 'u; }; {'a1: int -> int, 'y: int, 'x: 'v, 'w: int, 'u: 't, 's: int, 'r: int, }; {}; (8..14)
[DBG: solve]    unify_full {}; {'a1: int -> int, 'y: int, 'x: 'v, 'w: int, 'u: 't, 's: int, 'r: int, }; {'x = 'u; 'b1 = 't; }; (0..19)
[DBG: solve]      Unifying var, ty: 'x, 'u
[DBG: solve]    unify_full {}; {'a1: int -> int, 'y: int, 'x: 'v, 'w: int, 'u: 't, 's: int, 'r: int, }; {'b1 = 't; 'v = 'u; }; (0..19)
[DBG: solve]      Unifying var, ty: 'b1, 't
[DBG: solve]    unify_full {}; {'b1: 't, 'a1: int -> int, 'y: int, 'x: 'v, 'w: int, 'u: 't, 's: int, 'r: int, }; {'v = 'u; }; (0..19)
[DBG: solve]      Unifying var, ty: 'v, 'u
[DBG: solve]    unify_full {}; {'b1: 't, 'a1: int -> int, 'y: int, 'x: 'v, 'w: int, 'v: 'u, 'u: 't, 's: int, 'r: int, }; {}; (0..19)
[INF: anfang]   SUCCESS: type 't
