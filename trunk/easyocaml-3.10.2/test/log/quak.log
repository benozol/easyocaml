# t"let f = fun x -> succ x in f 3" ;;
[INF: anfang] Imported expression: let f = fun x -> (succ) (x) in (f) (3)
[DBG: anfang] Easy env: {*: int -> int -> int, +: int -> int -> int, -: int -> int -> int, /: int -> int -> int, abs: int -> int, asr: int -> int -> int, compare: 'h -> 'h -> int, exit: int -> 'i, land: int -> int -> int, lnot: int -> int, lor: int -> int -> int, lsl: int -> int -> int, lsr: int -> int -> int, lxor: int -> int -> int, max: 'm -> 'm -> 'm, max_int: int, min: 'l -> 'l -> 'l, min_int: int, mod: int -> int -> int, pred: int -> int, succ: int -> int, ~-: int -> int, }
[DBG: generate] succ => <{}, 'q, {'q = int -> int; }>
[DBG: generate] x => <{x: I{'s; }; }, 'r, {'s = 'r; }>
[DBG: generate] (succ) (x) => <{x: I{'s; }; }, 't, {'q = int -> int; 's = 'r; 't = 'v; 'r = 'u; 'q = 'u -> 'v; }>

[DBG: generate] fun x -> (succ) (x) => <{}, 'o,
 {'q = int -> int; 's = 'r; 't = 'v; 'r = 'u; 'q = 'u -> 'v; 'p = 's; 'p -> 't = 'o; }>

[DBG: generate] f => <{f: I{'x; }; }, 'w, {'x = 'w; }>
[DBG: generate] 3 => <{}, 'y, {int = 'y; }>

[DBG: generate] (f) (3) => <{f: I{'x; }; }, 'a1,
 {int = 'y; 'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; }>

[DBG: generate] let f = fun x -> (succ) (x) in (f) (3) =>
<{},  'l1,
 {
						'l1 = 'a1 = 'c1
  'p -> 't = 'k1 = 'x = 'w = 'b1 -> 'c1
				  int = 'y = 'b1

  'u -> 'v = 'i1 = int -> int
  
  'f1 = 'd1
  'j1 = 'g1 = 'h1 = 'e1
 }>

[DBG: solve] unify_full {'i1 = int -> int; int = 'y; 'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {}; {}; ([0,0+-1]..[0,0+-1]) ghost
[DBG: solve] unify_full {int = 'y; 'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {}; {'i1 = int -> int; }; ([0,0+-1]..[0,0+-1]) ghost
[DBG: solve] Unifying var, ty: 'i1, int -> int
[DBG: solve] unify_full {int = 'y; 'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, }; {}; ([0,0+-1]..[0,0+-1]) ghost
[DBG: solve] unify_full {'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, }; {int = 'y; }; (29..30)
[DBG: solve] Unifying int with var 'y
[DBG: solve] unify_full {'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, }; {'y = int; }; (29..30)
[DBG: solve] Unifying var, ty: 'y, int
[DBG: solve] unify_full {'a1 = 'c1; 'y = 'b1; 'w = 'b1 -> 'c1; 'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'y: int, }; {}; (29..30)
[DBG: solve] unify_full {'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'y: int, }; {'w = 'b1 -> 'c1; 'y = 'b1; 'a1 = 'c1; }; (27..30)
[DBG: solve] Unifying var, ty: 'w, 'b1 -> 'c1
[DBG: solve] unify_full {'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'y: int, 'w: 'b1 -> 'c1, }; {'y = 'b1; 'a1 = 'c1; }; (27..30)
[DBG: solve] Unifying var, ty: 'y, 'b1
[DBG: solve] unify_full {'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'y: int, 'w: 'b1 -> 'c1, }; {'a1 = 'c1; int = 'b1; }; (27..30)
[DBG: solve] Unifying var, ty: 'a1, 'c1
[DBG: solve] unify_full {'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'a1: 'c1, 'y: int, 'w: 'b1 -> 'c1, }; {int = 'b1; }; (27..30)
[DBG: solve] Unifying int with var 'b1
[DBG: solve] unify_full {'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'a1: 'c1, 'y: int, 'w: 'b1 -> 'c1, }; {'b1 = int; }; (27..30)
[DBG: solve] Unifying var, ty: 'b1, int
[DBG: solve] unify_full {'x = 'w; 'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'b1: int, 'a1: 'c1, 'y: int, 'w: 'b1 -> 'c1, }; {}; (27..30)
[DBG: solve] unify_full {'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'b1: int, 'a1: 'c1, 'y: int, 'w: 'b1 -> 'c1, }; {'x = 'w; }; (27..28)
[DBG: solve] Unifying var, ty: 'x, 'w
[DBG: solve] unify_full {'g1 = 'h1; 'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {}; (27..28)
[DBG: solve] unify_full {'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {'g1 = 'h1; }; (22..23)
[DBG: solve] Unifying var, ty: 'g1, 'h1
[DBG: solve] unify_full {'i1 = 'u -> 'v; 'h1 = 'e1; 'f1 = 'd1; 'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'g1: 'h1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {}; (22..23)
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'g1: 'h1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {'f1 = 'd1; 'h1 = 'e1; 'i1 = 'u -> 'v; }; (17..23)
[DBG: solve] Unifying var, ty: 'f1, 'd1
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {'h1 = 'e1; 'i1 = 'u -> 'v; }; (17..23)
[DBG: solve] Unifying var, ty: 'h1, 'e1
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {'i1 = 'u -> 'v; }; (17..23)
[DBG: solve] Unifying var, ty: 'i1, 'u -> 'v
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {int -> int = 'u -> 'v; }; (17..23)
[DBG: solve] Unifying 2 arrows: int -> int, 'u -> 'v
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {int = 'u; int = 'v; }; (17..23)
[DBG: solve] Unifying int with var 'u
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {int = 'v; 'u = int; }; (17..23)
[DBG: solve] Unifying int with var 'v
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, }; {'u = int; 'v = int; }; (17..23)
[DBG: solve] Unifying var, ty: 'u, int
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'u: int, }; {'v = int; }; (17..23)
[DBG: solve] Unifying var, ty: 'v, int
[DBG: solve] unify_full {'j1 = 'g1; 'p -> 't = 'k1; 'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {}; (17..23)
[DBG: solve] unify_full {'l1 = 'a1; 'k1 = 'x; }; {'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'j1 = 'g1; 'p -> 't = 'k1; }; (8..23)
[DBG: solve] Unifying var, ty: 'j1, 'g1
[DBG: solve] unify_full {'l1 = 'a1; 'k1 = 'x; }; {'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'p -> 't = 'k1; }; (8..23)
[DBG: solve] Unifying arrows/var: 'p -> 't, 'k1
[DBG: solve] unify_full {'l1 = 'a1; 'k1 = 'x; }; {'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'k1 = 'p -> 't; }; (8..23)
[DBG: solve] Unifying var, ty: 'k1, 'p -> 't
[DBG: solve] unify_full {'l1 = 'a1; 'k1 = 'x; }; {'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {}; (8..23)
[DBG: solve] unify_full {}; {'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'k1 = 'x; 'l1 = 'a1; }; (0..30)
[DBG: solve] Unifying var, ty: 'k1, 'x
[DBG: solve] unify_full {}; {'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'l1 = 'a1; 'p -> 't = 'x; }; (0..30)
[DBG: solve] Unifying var, ty: 'l1, 'a1
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'p -> 't = 'x; }; (0..30)
[DBG: solve] Unifying arrows/var: 'p -> 't, 'x
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'x = 'p -> 't; }; (0..30)
[DBG: solve] Unifying var, ty: 'x, 'p -> 't
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'w = 'p -> 't; }; (0..30)
[DBG: solve] Unifying var, ty: 'w, 'p -> 't
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'b1 -> 'c1 = 'p -> 't; }; (0..30)
[DBG: solve] Unifying 2 arrows: 'b1 -> 'c1, 'p -> 't
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'b1 = 'p; 'c1 = 't; }; (0..30)
[DBG: solve] Unifying var, ty: 'b1, 'p
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'c1 = 't; int = 'p; }; (0..30)
[DBG: solve] Unifying var, ty: 'c1, 't
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'c1: 't, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {int = 'p; }; (0..30)
[DBG: solve] Unifying int with var 'p
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'c1: 't, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, }; {'p = int; }; (0..30)
[DBG: solve] Unifying var, ty: 'p, int
[DBG: solve] unify_full {}; {'l1: 'a1, 'k1: 'p -> 't, 'j1: 'g1, 'i1: int -> int, 'h1: 'e1, 'g1: 'h1, 'f1: 'd1, 'c1: 't, 'b1: int, 'a1: 'c1, 'y: int, 'x: 'w, 'w: 'b1 -> 'c1, 'v: int, 'u: int, 'p: int, }; {}; (0..30)
SUCCESS: type 't
